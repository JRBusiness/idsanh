apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "id-scanner.fullname" . }}
  labels:
    app: {{ include "id-scanner.fullname" .}}
    chart: {{ include "id-scanner.fullname" . }}

spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: {{ include "id-scanner.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "id-scanner.fullname" . }}
      annotations:
        iam.amazonaws.com/role: {{ .Values.service.role }}
    spec:
      serviceAccountName: default
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecrets }}
      volumes:
        - name: vault-token
          emptyDir:
            medium: Memory
        - name: config
          configMap:
            name: {{ .Chart.Name }}-configmap
            items:
              - key: vault-agent-config-{{ .Values.service.environment }}-github.hcl
                path: vault-agent-config-{{ .Values.service.environment }}.hcl

              - key: consul-template-config-{{ .Values.service.environment }}-github.hcl
                path: consul-template-config-{{ .Values.service.environment }}.hcl

        - name: shared-data
          emptyDir: {}

        - name: static-content
          emptyDir: {}
        - name: vault-ca
          secret:
            secretName: vault-ca
            optional: false
            items:
              - key: vault.crt
                path: vault.crt
      initContainers:
        # Vault container
        - name: vault-agent-auth
          image: vault
          imagePullPolicy: IfNotPresent

          volumeMounts:
            - name: config
              mountPath: /etc/vault
            - name: vault-token
              mountPath: /home/vault
            - name: vault-ca
              mountPath: /etc/vault-ca
          # This assumes Vault running on local host and K8s running in Minikube using VirtualBox
          env:
            - name: VAULT_ADDR
              value: {{ .Values.service.vault }}
            - name: VAULT_CACERT
              value: /etc/vault-ca/vault.crt
          # Run the Vault agent
          args:
            [
              "agent",
              "-config=/etc/vault/vault-agent-config-{{ .Values.service.environment }}.hcl",
              #"-log-level=debug",
            ]

        # Consul Template container
        - name: consul-vault
          image: hashicorp/consul-template:alpine
          imagePullPolicy: IfNotPresent

          volumeMounts:
            - name: vault-token
              mountPath: /home/vault
            - name: config
              mountPath: /etc/consul-template
            - name: shared-data
              mountPath: /etc/secrets
            - name: vault-ca
              mountPath: /etc/vault-ca
          env:
            - name: ENVIRONMENT
              value: {{ .Values.service.environment }}
            - name: HOME
              value: /home/vault
            - name: VAULT_ADDR
              value: {{ .Values.service.vault }}
            - name: VAULT_CACERT
              value: /etc/vault-ca/vault.crt

          # Consul-Template looks in $HOME/.vault-token, $VAULT_TOKEN, or -vault-token (via CLI)
          args:
            [
              "-config=/etc/consul-template/consul-template-config-{{ .Values.service.environment }}.hcl",
              "-once"
              #"-log-level=debug",
            ]

      containers:
        - name: {{ .Chart.Name }}-nginx
          image: "{{ .Values.image.repository }}:{{ .Values.image.nginxtag }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: shared-data
              mountPath: /etc/secrets/
            - name: static-content
              mountPath: /usr/share/nginx/html/
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: ENVIRONMENT
              value: {{ .Values.service.environment }}
            - name: SERVICE_NAME
              value: {{ include "id-scanner.fullname" . }}
            - name: AWS_REGION
              value: {{ .Values.service.region }}

        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: shared-data
              mountPath: /etc/secrets/
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: ENVIRONMENT
              value: {{ .Values.service.environment }}
            - name: SERVICE_NAME
              value: {{ include "id-scanner.fullname" . }}
            - name: AWS_REGION
              value: {{ .Values.service.region }}