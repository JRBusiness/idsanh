apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "id-scanner.fullname" . }}-ecr-registry-helper-cm
  namespace: {{ .Values.namespace | default "default" }}
data:
  AWS_REGION: {{ .Values.service.region }}
  DOCKER_SECRET_NAME: ecrcreds
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "id-scanner.fullname" . }}-ecr-registry-helper
  namespace: {{ .Values.namespace | default "default" }}
spec:
  schedule: "*/60 * * * *"
  successfulJobsHistoryLimit: 3
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: default
          containers:
            - name: ecr-registry-helper
              image: odaniait/aws-kubectl:latest
              imagePullPolicy: IfNotPresent
              envFrom:
                - configMapRef:
                    name: {{ include "id-scanner.fullname" . }}-ecr-registry-helper-cm
              command:
                - /bin/sh
                - -c
                - |-
                  ECR_TOKEN=`aws ecr get-login-password --region {{ .Values.service.region }}`
                  NAMESPACE_NAME={{ .Values.namespace | default "default" }}
                  kubectl delete secret --ignore-not-found $DOCKER_SECRET_NAME -n $NAMESPACE_NAME
                  kubectl create secret docker-registry $DOCKER_SECRET_NAME \
                  --docker-server={{ .Values.docker.accountId }}.dkr.ecr.{{ .Values.service.region }}.amazonaws.com \
                  --docker-username=AWS \
                  --docker-password="${ECR_TOKEN}" \
                  --docker-email="bogus@advinow.int" \
                  --namespace=$NAMESPACE_NAME
                  echo "Secret was successfully updated at $(date)"
          restartPolicy: Never
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Values.namespace | default "default" }}
  name: {{ include "id-scanner.fullname" . }}-role-full-access-to-ecrsecrets
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["ecrcreds"]
    verbs: ["delete"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ include "id-scanner.fullname" . }}-ecr-creds-role-binding
  namespace: {{ .Values.namespace | default "default" }}
subjects:
  - kind: ServiceAccount
    name: default
    namespace: {{ .Values.namespace | default "default" }}
    apiGroup: ""
roleRef:
  kind: Role
  name: {{ include "id-scanner.fullname" . }}-role-full-access-to-ecrsecrets
  apiGroup: ""
---
